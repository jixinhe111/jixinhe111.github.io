<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 两只老虎 --from jxh</title>
    <link>https://jixinhe111.github.io/posts/</link>
    <description>Recent content in Posts on 两只老虎 --from jxh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 04 Oct 2020 08:35:00 +0800</lastBuildDate>
    
	<atom:link href="https://jixinhe111.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>邱稷铧</title>
      <link>https://jixinhe111.github.io/posts/%E5%A5%BD%E5%A5%BD/</link>
      <pubDate>Sun, 04 Oct 2020 08:35:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/%E5%A5%BD%E5%A5%BD/</guid>
      <description>这些话不仅是对你说的，也是对我自己说的。 600多天不在一起，见面了还是原来的感觉，单纯喜欢，为了在一起什么都可以不管的感觉。 之前很多次我都想找你，我还是很喜欢很喜欢很喜欢你，可我因为工作以后可能也是去</description>
    </item>
    
    <item>
      <title>Dubbo</title>
      <link>https://jixinhe111.github.io/posts/dubbo/</link>
      <pubDate>Wed, 15 Jul 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/dubbo/</guid>
      <description>Dubbo 1、简介 Dubbo是阿里SOA服务化治理方案的核心框架，是众多RPC框架中卓越的框架之一，它提供了注册中心机制，解耦了消费方和服务方动态发现的问题，并提高了可靠能力。我们可以通过官方的架构图了解下D</description>
    </item>
    
    <item>
      <title>RockerMQ</title>
      <link>https://jixinhe111.github.io/posts/rockermq/</link>
      <pubDate>Tue, 30 Jun 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/rockermq/</guid>
      <description>RockerMQ 对于上图中几个角色的说明： （1）NameServer：RocketMQ集群的命名服务器（也可以说是注册中心），它本身是无状态的（实际情况下可能存在每个NameServer实例上的数据有短暂的不一致现</description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://jixinhe111.github.io/posts/kafka/</link>
      <pubDate>Sat, 20 Jun 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/kafka/</guid>
      <description>Kafka 1、Kafka 是什么？主要应用场景有哪些？ Kafka 是一个分布式流式处理平台。 流平台具有三个关键功能： 消息队列：发布和订阅消息流，这个功能类似于消息队列，这也是 Kafka 也被归类为消息队列的原因。 容错的持久方式存储</description>
    </item>
    
    <item>
      <title>Zookeeper与Dubbo的安装、配置与使用</title>
      <link>https://jixinhe111.github.io/posts/zookeeper%E4%B8%8Edubbo%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 06 Jun 2020 12:34:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/zookeeper%E4%B8%8Edubbo%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
      <description>Zookeeper与Dubbo的安装、配置与使用 一、Zookeeper 1、什么是Zookeeper 在Zookeeper的官网上有这么一句话：ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group servic</description>
    </item>
    
    <item>
      <title>Tomcat优化</title>
      <link>https://jixinhe111.github.io/posts/tomcat%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 04 Jun 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/tomcat%E4%BC%98%E5%8C%96/</guid>
      <description>Tomcat优化 一、优化大纲 Tomcat是我们经常使用的 servlet容器之一，甚至很多线上产品都使用 Tomcat充当服务器。而且优化后的Tomcat性能提升显著，本文从以下几方面进行分析优化。 内存优</description>
    </item>
    
    <item>
      <title>Tomcat_Server的创建</title>
      <link>https://jixinhe111.github.io/posts/tomcat_server%E7%9A%84%E5%88%9B%E5%BB%BA/</link>
      <pubDate>Wed, 03 Jun 2020 18:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/tomcat_server%E7%9A%84%E5%88%9B%E5%BB%BA/</guid>
      <description>Tomcat_Server的创建 前面已经介绍了Tomcat服务器的整体结构和启动过程，本篇聚焦server.xml的解析，介绍Server的整个创建过程。 一、server的解析 要了解Server的创建</description>
    </item>
    
    <item>
      <title>Tomcat的启动过程</title>
      <link>https://jixinhe111.github.io/posts/tomcat%E7%9A%84%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Wed, 03 Jun 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/tomcat%E7%9A%84%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</guid>
      <description>Tomcat的启动过程 双击startup.bat启动tomcat，其实是来到catalina.bat脚本中，由catalina.bat脚本去执行org.apache.catalina.startup.</description>
    </item>
    
    <item>
      <title>Tomcat类加载器</title>
      <link>https://jixinhe111.github.io/posts/tomcat%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</link>
      <pubDate>Tue, 02 Jun 2020 18:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/tomcat%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</guid>
      <description>Tomcat类加载器 下载tomcat解压后，可以在webapps目录下看到几个文件夹（这些都是web应用），webapps对应到tomcat容器中的Host，里面的文件夹则对应到Context。tom</description>
    </item>
    
    <item>
      <title>Tomcat整体架构</title>
      <link>https://jixinhe111.github.io/posts/tomcat%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Tue, 02 Jun 2020 15:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/tomcat%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84/</guid>
      <description>Tomcat整体架构 一、Tomcat顶层结构 Server：服务器的意思，代表整个tomcat服务器，一个tomcat只有一个Server； Service：Server中的一个逻辑功能层， 一个Serve</description>
    </item>
    
    <item>
      <title>抓包_发包</title>
      <link>https://jixinhe111.github.io/posts/%E6%8A%93%E5%8C%85_%E5%8F%91%E5%8C%85/</link>
      <pubDate>Tue, 02 Jun 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/%E6%8A%93%E5%8C%85_%E5%8F%91%E5%8C%85/</guid>
      <description>抓包、发包 1. 抓包 1）什么是抓包？ 抓包（packet capture）就是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全。抓包也经常被用来进行数据截取等。 在程序运行的数据</description>
    </item>
    
    <item>
      <title>IO_NIO</title>
      <link>https://jixinhe111.github.io/posts/io_nio/</link>
      <pubDate>Mon, 01 Jun 2020 18:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/io_nio/</guid>
      <description>一、IO 1. IO流的分类 按照流的流向分，可以分为输入流和输出流； 按照操作单元划分，可以划分为字节流和字符流； 按照流的角色划分为节点流和处理流。 处理流的功能：1、消除不同节点流的实现差异，提供更方便的方法</description>
    </item>
    
    <item>
      <title>Java开发手册</title>
      <link>https://jixinhe111.github.io/posts/java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/</link>
      <pubDate>Mon, 01 Jun 2020 12:56:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C/</guid>
      <description>一、编程规约 (一) 命名风格 1.【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。 2.【强制】所有编程相关的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。 3</description>
    </item>
    
    <item>
      <title>Hello Blog</title>
      <link>https://jixinhe111.github.io/posts/hello/</link>
      <pubDate>Sun, 31 May 2020 16:34:00 +0800</pubDate>
      
      <guid>https://jixinhe111.github.io/posts/hello/</guid>
      <description> Hello Blog </description>
    </item>
    
  </channel>
</rss>